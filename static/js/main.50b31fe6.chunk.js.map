{"version":3,"sources":["components/Sidebar.js","pages/Dashboard.js","pages/NewNote.js","pages/NoteDetail.js","pages/EditNote.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","props","useState","query","setQuery","notes","setNotes","useEffect","className","to","placeholder","onChange","event","searchQuery","target","value","length","filter","note","title","includes","onKeyUp","key","map","id","DashboardPage","NewNotePage","setTitle","description","setDescription","style","minHeight","onClick","JSON","parse","localStorage","getItem","Date","getTime","push","setItem","stringify","NoteDetailPage","match","params","find","parseInt","EditNotePage","noteIndex","findIndex","updatedNote","splice","history","App","_","path","exact","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50b31fe6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Sidebar(props) {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setNotes(props.notes);\r\n    }, [props.notes]);\r\n\r\n    const search = event => {\r\n        const searchQuery = event.target.value;\r\n        setQuery(searchQuery);\r\n        if (searchQuery.length === 0) {\r\n            return setNotes(props.notes);\r\n        }\r\n        return setNotes(props.notes.filter(note => {\r\n            return note.title.includes(event.target.value);\r\n        }));\r\n    };\r\n\r\n    const clearIfEscape = event => {\r\n        if (event.key === 'Escape') {\r\n            setQuery('');\r\n            return setNotes(props.notes);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"sideBar\">\r\n            <div className=\"logo font-bold p-3 text-xl uppercase\">\r\n                <Link to=\"/\" className=\"cursor-pointer text-red-500\">Notebook</Link>\r\n                <Link to=\"/new\" className=\"float-right uppercase rounded text-white bg-red-500 hover:bg-red-600 text-sm py-1 px-2 cursor-pointer\">New</Link>\r\n            </div>\r\n            <input\r\n                placeholder=\"Search\"\r\n                className=\" border-red-300 border-t border-b border-r-0 border-l-0 focus:outline-none\"\r\n                onChange={search}\r\n                onKeyUp={clearIfEscape}\r\n                value={query} />\r\n            <div className=\"py-2 sidebarLinkContainer\">\r\n                {\r\n                    notes.map(note => {\r\n                        return <Link to={\"/note/\" + note.id} key={note.id} className=\"p-2 hover:bg-red-500 hover:text-white cursor-pointer block\">{note.title}</Link>;\r\n                    })\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function DashboardPage(props) {\r\n\r\n    return (\r\n        <div className=\"text-4xl font-bold tracking-widest flex justify-center items-center h-screen text-red-500\">\r\n            Notebook\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function NewNotePage(props) {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const updateTitle = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const updateDescription = event => {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    const addNote = () => {\r\n        const notes = (JSON.parse(localStorage.getItem('notes')) || []);\r\n        const note = { id: (new Date()).getTime(), title, description };\r\n        notes.push(note);\r\n        localStorage.setItem('notes', JSON.stringify(notes));\r\n        props.setNotes(notes);\r\n        setTitle('');\r\n        setDescription('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"text-xl font-bold text-red-500 py-3 px-8 border-b border-red-300\">Add a new note</div>\r\n            <div className=\"p-8\">\r\n                <input placeholder=\"Title\" onChange={updateTitle} value={title} className=\"block mb-3 border-red-300 border w-full px-2 py-1\" />\r\n                <textarea\r\n                    placeholder=\"Description\"\r\n                    onChange={updateDescription}\r\n                    value={description}\r\n                    className=\"block mb-3 border-red-300 border w-full px-2 py-1\"\r\n                    style={{ minHeight: '15rem' }}\r\n                />\r\n                <button onClick={addNote} className=\"rounded px-10 py-1 uppercase block bg-red-500 text-white hover:bg-red-600\">Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NoteDetailPage(props) {\r\n    const notes = (JSON.parse(localStorage.getItem('notes')) || []);\r\n    const { match: { params: { id } } } = props;\r\n    const note = notes.find(note => note.id === parseInt(id));\r\n\r\n    const deleteNote = () => {\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"text-xl font-bold text-red-500 py-3 px-8 border-b border-red-300 uppercase\">\r\n                {note.title}\r\n                <Link to={\"/edit/\" + note.id} className=\"float-right uppercase rounded text-white bg-green-500 hover:bg-red-600 text-sm py-1 px-2 cursor-pointer\">Edit</Link>\r\n                <span onClick={deleteNote} className=\"float-right uppercase rounded text-white bg-red-500 hover:bg-red-600 text-sm py-1 px-2 cursor-pointer mr-2\">Delete</span>\r\n            </div>\r\n            <pre className=\"p-8 font-sans\">{note.description}</pre>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function EditNotePage(props) {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const notes = (JSON.parse(localStorage.getItem('notes')) || []);\r\n    const { match: { params: { id } } } = props;\r\n    const note = notes.find(note => note.id === parseInt(id));\r\n\r\n    useEffect(() => {\r\n        setTitle(note.title);\r\n        setDescription(note.description);\r\n    }, [note.title, note.description]);\r\n\r\n    const updateTitle = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const updateDescription = event => {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    const saveNote = () => {\r\n        const noteIndex = notes.findIndex(note => note.id === parseInt(id));\r\n        const updatedNote = { id: parseInt(id), title, description };\r\n        notes.splice(noteIndex, 1, updatedNote);\r\n        localStorage.setItem('notes', JSON.stringify(notes));\r\n        props.setNotes(notes);\r\n        setTitle('');\r\n        setDescription('');\r\n        props.history.push('/note/' + id);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"text-xl font-bold text-red-500 py-3 px-8 border-b border-red-300 uppercase\">\r\n                {note.title}\r\n                <Link to={\"/note/\" + note.id} className=\"float-right uppercase rounded text-white bg-red-500 hover:bg-red-600 text-sm py-1 px-2 cursor-pointer\">Back</Link>\r\n            </div>\r\n            <div className=\"p-8\">\r\n                <input placeholder=\"Title\" onChange={updateTitle} value={title} className=\"block mb-3 border-red-300 border w-full px-2 py-1\" />\r\n                <textarea\r\n                    placeholder=\"Description\"\r\n                    onChange={updateDescription}\r\n                    value={description}\r\n                    className=\"block mb-3 border-red-300 border w-full px-2 py-1\"\r\n                    style={{ minHeight: '15rem' }}\r\n                />\r\n                <button onClick={saveNote} className=\"rounded px-10 py-1 uppercase block bg-red-500 text-white hover:bg-red-600\">Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport DashboardPage from './pages/Dashboard';\nimport NewNotePage from './pages/NewNote';\n\nimport './styles/tailwind.css';\nimport './App.scss';\nimport NoteDetailPage from './pages/NoteDetail';\nimport EditNotePage from './pages/EditNote';\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([]);\n\n  useEffect(_ => {\n    setNotes(JSON.parse(localStorage.getItem('notes')) || []);\n  }, []);\n\n  return (\n    <div>\n      <Sidebar notes={notes} />\n      <div className=\"mainContainer\">\n        <Switch>\n          <Route path=\"/\" exact render={props => <DashboardPage {...props} notes={notes}/>} />\n          <Route path=\"/new\" exact render={props => <NewNotePage {...props} setNotes={setNotes} />} />\n          <Route path=\"/note/:id\" exact render={props => <NoteDetailPage {...props} />} />\n          <Route path=\"/edit/:id\" exact render={props => <EditNotePage {...props} setNotes={setNotes} />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}